openapi: "3.0.0"
info:
  title: "CSVFileDefinition"
  description: "This document describes the API for MDE (Minimun Data Elements) Definition of CSV files."
  version: "1.0.0"
  contact:
    email: "surveillance@cdc.gov"

  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: https://localhost/fileDefinition/v1
    description: Development server


tags:
  - name: csvDef
    description: CSV Definition

paths:
  /csvDefinition/{code}:
    parameters:
      - $ref: '#/components/parameters/code'
      - in: query
        name: version
        required: false
        schema:
          type: string

    get:
      tags:
        - csvDef
      summary: Retrieves File Definition based on code

      responses:
        '200':
          $ref: '#/components/schemas/CSVDefinition'

  /csvDefinition/parse:
    post:
      tags:
        - csvDef
      requestBody:
        required: true
        description: The raw content of a csv file to be converted into a generic CSV model of Rows and Fields.
        content:
          text/plain:
            schema:
              type: string
      summary: This method accepts a CSV document and translates into a generic JSON of Rows and Fields.
      responses:
        '200':
          description: ok

  /csvDefinition/parseJSON:
    post:
      tags:
        - csvDef
      requestBody:
        required: true
        description:  The raw content of a file to be converted into a JSON Representatin of the CSV document, using column names as attributes
        content:
          text/plain:
            schema:
              type: string
      summary: This method accepts a CSV document and translates into a JSON using CSV's column names.
      responses:
        '200':
          description: ok


  /csvDefinition/generate:
    post:
      tags:
        - csvDef
      requestBody:
        required: true
        description:  The content to be translated into the File format to be persisted.
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/CSVFile'


      summary: This method accepts a MDEFile JSON object and formats it for data persistence following the MDE Rules.
      responses:
        '200':
          description: The file format representation of the content passed into the service.

components:
  schemas:
    CSVDefinition:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        version:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FieldDefinition'
    FieldDefinition:
      type: object
      properties:
        path:
          type: integer
          description: The path to the field. In CSV, a path is simply the field Number, or position of the column in the file.
          example: 1
        type:
          type: string
          enum: [Numeric, String, Boolean, Date, DateTime, Time ]
          example: 'Character'
        required:
          type: boolean
        name:
          type: string
          description: A succint name of the field - can be used for codes to reference fields by name. It's also used for generating the JSON representation of the document using field names.
        format:
          type: string
          description: can use for RegEx (zip codes, dates, etc)
          enum: ['N/A', 'MMCCYY', 'MMDDCCYY']
          example: 'N/A'
        rangeMin:
          type: integer
          description: For Numeric values, the minimum value this field accepts. For String, the minimum length the value must have.
        rangeMax:
          type: integer
          description: Form numeric values, the maximum value this field accpets. For Strings, the maximum length the value can have.
        category:
          type: string
          enum: ['CatA', 'CatB']
          example:
        label:
          type: string
          description: A user friendly name for the field - can be used for UIs
        relatedInfo:
          type: string
          description: Used to provide extra information about the field.
        possibleAnswers:
          type: array
          items:
            $ref: '#/components/schemas/PossibleAnswers'
    PossibleAnswers:
      type: object
      properties:
        name:
          type: string
        choices:
          type: array
          items:
            $ref: '#/components/schemas/AnswerChoice'
    AnswerChoice:
      type: object
      properties:
        code:
          type: integer
        label:
          type: string

    CSVFile:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/CSVRow'
    CSVRow:
      type: object
      properties:
        rowNumber:
          type: integer
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CSVField'
    CSVField:
      type: object
      properties:
        fieldNumber:
          type: integer
        value:
          type: string



    Error:
      type: object
      properties:
        timestamp:
          type: string
          format: ISO-8601 UTC based
          example: "2017-09-14T12:44:35.200Z"
        code:
          type: string
          description: Service specific categorization of errors.
          example: 'RESOURCE_NOT_FOUND'
        description:
          type: string
          description: User friendly message about the error.
          example: "The number provided is invalid."
        status:
          type: integer
          description: HTTP status code returned to user. Must match HTTP Status on header.
          example: 400
        path:
          type: string
          description: The Full URL that was called that generated this error.
          format: URL
          example: 'http://localhost/fileDefinition/v1/messages'
        exception:
          type: string
          description: The exception, if any, associated with this error.
          example: 'java.lang.NullPointerException'
      required:
        - timestamp
        - code
        - description
        - status
        - path

  parameters:
    code:
      in: path
      name: code
      required: true
      schema:
        type: string




  responses:
    NotFound:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    IllegalInput:
      description: Illegal input for operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'


    BadRequest:
      description: "Any error that is caused by the user - bad data sent, bad parameters, business rules violated, etc."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    ServerError:
      description: "Any server side error that can occur."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
